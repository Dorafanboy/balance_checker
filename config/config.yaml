server:
  port: ":8080"
  readTimeout: 15 # seconds
  writeTimeout: 15 # seconds
  idleTimeout: 60 # seconds

logging:
  level: "debug" # debug, info, warn, error, fatal, panic
  # file: "./app.log" # Optional: Uncomment to log to a file

swagger:
  enabled: true
  path: "/swagger"

cache:
  defaultExpirationMinutes: 60
  cleanupIntervalMinutes: 120

# Deprecated section, to be reviewed/removed after DEXScreener integration
coinGecko:
  baseURL: "https://api.coingecko.com/api/v3"
  apiKey: "YOUR_COINGECKO_API_KEY" # Replace with your actual key if you have one
  requestTimeoutMillis: 10000
  # AssetPlatformMapping maps our internal ChainID (from NetworkNode) to CoinGecko's platform ID
  assetPlatformMapping:
    1: "ethereum"
    56: "binance-smart-chain"
    137: "polygon-pos"
    10: "optimistic-ethereum"
    42161: "arbitrum-one"
    43114: "avalanche"
    250: "fantom"
    1284: "moonbeam"
    1285: "moonriver"
    100: "xdai" # Gnosis Chain
    25: "cronos"
    8453: "base"
    # Add other mappings as needed

dexScreener:
  baseURL: "https://api.dexscreener.com"
  requestTimeoutMillis: 10000

rpcClient:
  defaultTimeoutMs: 10000 # Default timeout for individual RPC calls
  rateLimit: 100          # Requests per second for the RPC client pool (global or per provider if implemented)
  burstLimit: 150         # Burst limit for the RPC client pool
  maxRetries: 3           # Max retries for a failed RPC call
  retryDelayMs: 200       # Delay between retries
  maxIdleConnsPerHost: 10 # Max idle connections per host for the underlying HTTP transport

portfolioService:
  useMock: false
  balanceFetchTimeoutMs: 30000 # Timeout for fetching all balances for a single wallet across all networks
  maxConcurrentRequests: 5     # Max concurrent network fetches for a single wallet portfolio request
  maxAddressesPerBatchCall: 20 # Max token addresses in a single multicall for balances

tokenPriceService:
  requestTimeoutMillis: 15000 # Timeout for a request to the price provider (e.g., DEXScreener)
  cacheTTLMinutes: 30         # How long to cache token prices
  maxTokensPerBatchRequest: 30 # Max tokens to request in a single batch from DEXScreener (as per their limit)

networks:
  - chainID: 1
    name: "Ethereum Mainnet"
    dexScreenerChainID: "ethereum"
    endpoint: "https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID"
    tokensFile: "data/tokens/ethereum_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 56
    name: "Binance Smart Chain"
    dexScreenerChainID: "bsc"
    endpoint: "https://bsc-dataseed.binance.org/"
    tokensFile: "data/tokens/bsc_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 137
    name: "Polygon Mainnet"
    dexScreenerChainID: "polygon"
    endpoint: "https://polygon-rpc.com/"
    tokensFile: "data/tokens/polygon_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 10
    name: "Optimism"
    dexScreenerChainID: "optimism"
    endpoint: "https://mainnet.optimism.io"
    tokensFile: "data/tokens/optimism_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 42161
    name: "Arbitrum One"
    dexScreenerChainID: "arbitrum"
    endpoint: "https://arb1.arbitrum.io/rpc"
    tokensFile: "data/tokens/arbitrum_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 43114
    name: "Avalanche C-Chain"
    dexScreenerChainID: "avalanche"
    endpoint: "https://api.avax.network/ext/bc/C/rpc"
    tokensFile: "data/tokens/avalanche_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 250
    name: "Fantom Opera"
    dexScreenerChainID: "fantom"
    endpoint: "https://rpc.ftm.tools/"
    tokensFile: "data/tokens/fantom_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  # Add other networks here following the same structure
  # Example for a network where dexScreenerChainID might be different or need lookup:
  - chainID: 100 # Gnosis Chain (formerly xDai)
    name: "Gnosis Chain"
    dexScreenerChainID: "gnosischain" # Verify this ID with DEX Screener docs/usage
    endpoint: "https://rpc.gnosischain.com/"
    tokensFile: "data/tokens/gnosis_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 1284 # Moonbeam
    name: "Moonbeam"
    dexScreenerChainID: "moonbeam" # Verify
    endpoint: "https://rpc.api.moonbeam.network"
    tokensFile: "data/tokens/moonbeam_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 1285 # Moonriver
    name: "Moonriver"
    dexScreenerChainID: "moonriver" # Verify
    endpoint: "https://rpc.api.moonriver.moonbeam.network"
    tokensFile: "data/tokens/moonriver_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 25 # Cronos
    name: "Cronos"
    dexScreenerChainID: "cronos" # Verify
    endpoint: "https://evm.cronos.org"
    tokensFile: "data/tokens/cronos_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 8453 # Base
    name: "Base"
    dexScreenerChainID: "base" # Verify
    endpoint: "https://mainnet.base.org"
    tokensFile: "data/tokens/base_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10
  - chainID: 42220 # Celo
    name: "Celo"
    dexScreenerChainID: "celo" # Verify
    endpoint: "https://forno.celo.org"
    tokensFile: "data/tokens/celo_tokens.json"
    rpcTimeoutMs: 10000
    limiterPeriod: "1s"
    limiterBurst: 10

# Global token list (optional, might be deprecated in favor of per-network token files)
# tokens:
#   - address: "0xSomeTokenAddress"
#     symbol: "STK"
#     chainID: 1
#   - address: "0xAnotherTokenAddress"
#     symbol: "ATK"
#     chainID: 56 